---
// 博客文章详情页
import MainLayout from '@/layouts/MainLayout.astro';
import { getAllPosts, getPostBySlug } from '@/services/BlogService';
import { render } from 'astro:content';
import { UI_TEXT, URLS } from '@/consts';
import { slugify } from '@/utils/stringUtils';
import { formatDate } from '@/utils/dateUtils';

export async function getStaticPaths() {
  const allPosts = await getAllPosts();
  return allPosts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post },
    };
  });
}

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/404');
}

const post = await getPostBySlug(slug);

if (!post) {
  return Astro.redirect('/404');
}

const { Content } = await render(post);

const formattedDate = formatDate(post.data.created);

---

<MainLayout title={post.data.title || UI_TEXT.untitledPost}>
  <article class="prose prose-lg dark:prose-invert max-w-4xl mx-auto mb-4 text-justify">
    <h1 class="mt-0 text-4xl leading-normal">{post.data.title}</h1>
    <div class="post-meta mb-8">
      {formattedDate && (
        <div class="flex mb-1 items-baseline gap-2">
          <span class="font-semibold text-sm" style="color: var(--meta-label-color);">{UI_TEXT.publishDate}:</span>
          <span class="text-sm" style="color: var(--meta-date-color);">{formattedDate}</span>
        </div>
      )}
      {post.data.category && (
        <div class="flex mb-1 items-baseline gap-2">
          <span class="font-semibold text-sm" style="color: var(--meta-label-color);">{UI_TEXT.category}:</span>
          <a href={`${URLS.categories}/${slugify(post.data.category)}/`} class="text-sm hover:underline" style="color: var(--meta-category-color);">
            {post.data.category}
          </a>
        </div>
      )}
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex">
          <span class="font-semibold text-sm" style="color: var(--meta-label-color);">{UI_TEXT.tag}:</span>
          <div class="flex flex-wrap gap-x-3 gap-y-1 pl-3">
            {post.data.tags.map((tag: string) => (
              <a href={`${URLS.tags}/${slugify(tag)}/`} class="tag-link text-sm hover:underline" style="color: var(--meta-tag-color);">
                {tag}
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
    <Content />
  </article>
</MainLayout>
